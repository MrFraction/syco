###############################################################################
# COMMAND CONFIGURATION
#
# $Id: command.cfg.in,v 1.13 2004/12/02 04:48:37 mattkent Exp $
#
# SYNTAX:
# command[<command_name>]=<command_line>
#
# <command_name> = A short name used to identify the command
# <command_line> = The actual command line.  The command line doesn't have to
#    be surrounded in quotes, but may contain quotes as needed within
#    the command line.  Take care to use single quotes at the
#    outer edges of commands or you will have command line
#    expansion problems when the command is executed by the shell.
#    Any valid shell command can be used.  Multiple commands can
#    be separated with semicolons, piping is allowed.  The 
#    command line can contain macros, but not are macros are valid
#    at all time (notifications, service checks, etc).  See the
#    HTML documentaion for more informationon on using macros in
#    commands.
#                  
# Note: Service check, service notification, host check, host notification,
#    service event handler, and host event handler functions are all defined
#    here.
#
# Note: Use the convertcfg program in the contrib directory of the Nagios 
#   distribution to convert this file into a object file format.
#
###############################################################################

# Service notification command - send email with problem summary

command[notify-by-email]=/bin/printf "$OUTPUT$" | /bin/mail -s '$SERVICESTATE$ alert for $HOSTALIAS$/$SERVICEDESC$' $CONTACTEMAIL$
command[notify-by-epager]=/bin/echo "$OUTPUT$" | /bin/mail -s '$HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$' $CONTACTPAGER$
# These are some example service check commands.  See the HTML
# documentation on the plugins for examples of how to configure
# command definitions.

################################################################
# Remote checks can be donw from this host on to other new hosts
#

command[check_tcp]=/usr/lib64/nagios/plugins/check_tcp -H $HOSTADDRESS$ -p $ARG1$
command[check_udp]=/usr/lib64/nagios/plugins/check_udp -H $HOSTADDRESS$ -p $ARG1$
command[check_ftp]=/usr/lib64/nagios/plugins/check_ftp -H $HOSTADDRESS$
command[check_pop]=/usr/lib64/nagios/plugins/check_pop -H $HOSTADDRESS$
command[check_smtp]=/usr/lib64/nagios/plugins/check_smtp -H $HOSTADDRESS$
command[check_nntp]=/usr/lib64/nagios/plugins/check_nntp -H $HOSTADDRESS$
command[check_telnet]=/usr/lib64/nagios/plugins/check_tcp -H $HOSTADDRESS$ -p 23

command[check_ntp]=/usr/lib64/nagios/plugins/check_ntp -H $HOSTADDRESS$
command[check_ntp_ntpq]=/usr/lib64/nagios/plugins/check_ntp -H $HOSTADDRESS$ -j 10 -k 15
command[check_flexlm]=/usr/lib64/nagios/plugins/check_flexlm -F $ARG1$
command[check_hpjd]=/usr/lib64/nagios/plugins/check_hpjd -H $HOSTADDRESS$ -C public
command[check_mrtg]=/usr/lib64/nagios/plugins/check_mrtg $ARG1$ 10 AVG $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$
command[traffic_average]=/usr/lib64/nagios/plugins/check_mrtgtraf $ARG1$ 10 AVG $ARG2$ $ARG3$ $ARG4$ $ARG5$
command[check_http]=/usr/lib64/nagios/plugins/check_http -H $HOSTADDRESS$ -I $HOSTADDRESS$
command[check_http2]=/usr/lib64/nagios/plugins/check_http -H $ARG1$ -I $HOSTADDRESS$ -w $ARG2$ -c $ARG3$

###############################################################
# Local run host does checks on the local server
#



command[check_disk]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10%
command[check_load]=/usr/lib64/nagios/plugins/check_load -w 3,2,1 -c 4,4,4
command[check_disk_root]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-root
command[check_disk_home]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-home 
command[check_disk_tmp]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-tmp
command[check_disk_var]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-var
command[check_disk_varlog]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-varlog
command[check_disk_vartmp]=/usr/lib64/nagios/plugins/check_disk -w 15% -c 10% -p /dev/mapper/VolGroup00-vartmp
command[check_swap]=/usr/lib64/nagios/plugins/check_swap -w 15% -c 10%
command[check_dns]=/usr/lib64/nagios/plugins/check_dns -H www.fareoffice.com
command[check_users]=/usr/lib64/nagios/plugins/check_users -w 0 -c 5
command[check_procs]=/usr/lib64/nagios/plugins/check_procs -w 200 -c 300
command[check_procs_zombie]=/usr/lib64/nagios/plugins/check_procs -w 2 -c 5 -s Z
command[check_proc_running]=/usr/lib64/nagios/plugins/check_procs -c 1:1 -C $ARG1$

command[check_pgsql]=/usr/lib64/nagios/plugins/check_pgsql -H $HOSTADDRESS$ 
command[check_ping]=/usr/lib64/nagios/plugins/check_ping -H $HOSTADDRESS$ -w 10:20% -c 60:100%
command[check_procs_httpd]=/usr/lib64/nagios/plugins/check_procs -w 10 -c 300 -C httpd
command[check_procs_vsz]=/usr/lib64/nagios/plugins/check_procs -w 8096 -c 16182 -C httpd --metric VSZ
command[check_ups]=/usr/lib64/nagios/plugins/check_ups -H $HOSTADDRESS$ -u $ARG1$

# An example of using check_by_ssh as an active service check
command[ssh_disk]=/usr/lib64/nagios/plugins/check_by_ssh -H $HOSTADDRESS$ -C '/usr/lib64/nagios/plugins/check_disk -w 85% -c 95% -p $ARG1$'


# This command checks to see if a host is "alive" by pinging it.  The
# check must result in a 100% packet loss or 5 second (5000ms) round
# trip average to produce an error.

# This command checks to see if a host is "alive" by pinging it.
command[check-host-alive]=/usr/lib64/nagios/plugins/check_ping -H $HOSTADDRESS$ -w 5000,100% -c 5000,100% -p 1

# This command checks to see if a printer is "alive" by pinging it.
command[check-printer-alive]=/usr/lib64/nagios/plugins/check_ping -H $HOSTADDRESS$ -w 5000,100% -c 5000,100% -p 1

# This command checks to see if a switch is "alive" by pinging it.
command[check-switch-alive]=/usr/lib64/nagios/plugins/check_ping $HOSTADDRESS$ -w 5000,100% -c 5000,100% -p 1

# This command checks to see if a router is "alive" by pinging it.
command[check-router-alive]=/usr/lib64/nagios/plugins/check_ping -H $HOSTADDRESS$ -w 5000,100% -c 5000,100% -p 1

# Check if a host is alive by doing a fast ping instead of a regular ping
command[check-fast-alive]=/usr/lib64/nagios/plugins/check_fping -H $HOSTADDRESS$

# Check if the IMAP service is alive (default port=143)
command[check-imap]=/usr/lib64/nagios/plugins/check_imap -H $HOSTADDRESS$

# Check RPC services
command[check-rpc]=/usr/lib64/nagios/plugins/check_rpc -H $HOSTADDRESS$ -C $ARG1$

# Check if the NFS server is running (version 2 and version 3)
command[check-nfs]=/usr/lib64/nagios/plugins/check_rpc -H $HOSTADDRESS$ -C nfs -c2,3

# Check a port that should be open
command[check_nmap]=/usr/lib64/nagios/plugins/check_nmap -H $HOSTADDRESS$ -t 30 -p $ARG1$

# Check a port that should be open and another that *could* be open,
# but no warning is given if optional port is closed.

command[check_nmap_optional]=/usr/lib64/nagios/plugins/check_nmap -H $HOSTADDRESS$ -t 60 -p $ARG1$ -o $ARG2$

# Specify range to nmap
command[check_nmap_range]=/usr/lib64/nagios/plugins/check_nmap -H $HOSTADDRESS$ -t 60 -p $ARG1$ -r $ARG2$

# Specify both optional and range
command[check_nmap_opt_range]=/usr/lib64/nagios/plugins/check_nmap -H $HOSTADDRESS$ -t 60 -p $ARG1$ -o $ARG2$ -r$ARG3$

# Check Radius
command[check_radius]=/usr/lib64/nagios/plugins/check_radius $ARG1$ $ARG2$ $HOSTADDRESS$ 1812 $ARG3$


# Check HTTP proxy
# This is a command for checking squid or other proxy servers which uses check
# http to ensure an HTTP 200 comes back ..... i.e. squid actually
# serves the page and not an error message.
# Using check_http will allow verification of authenticated proxies
#
# Note:: This used to call "check_reply" which was pretty close to check_tcp
#        The functionality of check_reply has been merged into check_tcp

command[check_squid]=/usr/lib64/nagios/plugins/check_http -H $HOSTADDRESS$ -p $ARG1$  -u $ARG2$  -e 'HTTP/1.0 200 OK'


